# Generated by Django 2.1.4 on 2018-12-31 06:56

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('minus', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminToolsDashboardPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('data', models.TextField()),
                ('dashboard_id', models.CharField(max_length=100)),
            ],
            options={
                'managed': True,
                'db_table': 'admin_tools_dashboard_preferences',
            },
        ),
        migrations.CreateModel(
            name='AdminToolsMenuBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'managed': True,
                'db_table': 'admin_tools_menu_bookmark',
            },
        ),
        migrations.CreateModel(
            name='AlbumsAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('pub_date', models.DateTimeField()),
                ('order', models.IntegerField()),
                ('file', models.CharField(max_length=256)),
                ('rating_votes', models.IntegerField()),
                ('rating_score', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('album_id', models.IntegerField(blank=True, null=True)),
                ('downloadable', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'albums_audio',
            },
        ),
        migrations.CreateModel(
            name='AlbumsAudioalbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('object_pk', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(default='null', max_length=128)),
                ('slug', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'albums_audioalbum',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=80, unique=True)),
            ],
            options={
                'managed': True,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('message', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'auth_message',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=50)),
                ('content_type_id', models.IntegerField()),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': True,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='BannersBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('key', models.CharField(max_length=20, unique=True)),
                ('content', models.TextField()),
                ('holder_id', models.IntegerField()),
                ('ratio', models.SmallIntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'banners_banner',
            },
        ),
        migrations.CreateModel(
            name='BannersPlaceholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=35)),
                ('key', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'managed': True,
                'db_table': 'banners_placeholder',
            },
        ),
        migrations.CreateModel(
            name='CaptchaCaptchastore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.CharField(max_length=32)),
                ('response', models.CharField(max_length=32)),
                ('hashkey', models.CharField(max_length=40, unique=True)),
                ('expiration', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'captcha_captchastore',
            },
        ),
        migrations.CreateModel(
            name='ChatChatroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'chat_chatroom',
            },
        ),
        migrations.CreateModel(
            name='ChunksChunk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('lang_code', models.CharField(max_length=5)),
                ('site_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'chunks_chunk',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMassmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=256)),
                ('body', models.TextField()),
                ('banner', models.TextField()),
                ('date', models.DateTimeField()),
                ('is_ready', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'delivery_massmail',
            },
        ),
        migrations.CreateModel(
            name='DeliverySubscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=128, unique=True)),
                ('is_subscribed', models.IntegerField()),
                ('frequency', models.CharField(max_length=12)),
                ('date', models.DateTimeField()),
                ('hash', models.CharField(max_length=128)),
            ],
            options={
                'managed': True,
                'db_table': 'delivery_subscriber',
            },
        ),
        migrations.CreateModel(
            name='DeliverySubscribersmailsettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_title', models.CharField(max_length=256)),
                ('daily_body', models.TextField()),
                ('daily_banner', models.TextField(blank=True, null=True)),
                ('weekly_title', models.CharField(max_length=256)),
                ('weekly_body', models.TextField()),
                ('weekly_banner', models.TextField(blank=True, null=True)),
                ('weekly_2_title', models.CharField(max_length=256)),
                ('weekly_2_body', models.TextField()),
                ('weekly_2_banner', models.TextField(blank=True, null=True)),
                ('monthly_title', models.CharField(max_length=256)),
                ('monthly_body', models.TextField()),
                ('monthly_banner', models.TextField(blank=True, null=True)),
                ('happybirthday_title', models.CharField(max_length=256)),
                ('happybirthday_body', models.TextField()),
                ('happybirthday_banner', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'delivery_subscribersmailsettings',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('user_id', models.IntegerField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoAuthopenidAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.TextField()),
                ('handle', models.CharField(max_length=255)),
                ('secret', models.TextField()),
                ('issued', models.IntegerField()),
                ('lifetime', models.IntegerField()),
                ('assoc_type', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_authopenid_association',
            },
        ),
        migrations.CreateModel(
            name='DjangoAuthopenidNonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.CharField(max_length=255)),
                ('timestamp', models.IntegerField()),
                ('salt', models.CharField(max_length=40)),
            ],
            options={
                'managed': True,
                'db_table': 'django_authopenid_nonce',
            },
        ),
        migrations.CreateModel(
            name='DjangoAuthopenidUserassociation',
            fields=[
                ('openid_url', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_authopenid_userassociation',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField()),
                ('size', models.IntegerField()),
                ('content_type', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255)),
                ('name', models.TextField(default='null')),
                ('hash', models.CharField(max_length=40)),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_attachment',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumBan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('ban_start', models.DateTimeField()),
                ('ban_end', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_ban',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=80)),
                ('position', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_category',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumCategoryGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_category_groups',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumForum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('name', models.CharField(default='null', max_length=80)),
                ('position', models.IntegerField()),
                ('description', models.TextField()),
                ('updated', models.DateTimeField()),
                ('post_count', models.IntegerField()),
                ('topic_count', models.IntegerField()),
                ('last_post_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_forum',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumForumModerators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_forum_moderators',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_id', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('markup', models.CharField(max_length=15)),
                ('body', models.TextField()),
                ('body_html', models.TextField()),
                ('user_ip', models.CharField(blank=True, max_length=15, null=True)),
                ('user', models.ForeignKey(on_delete='PROTECT', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_post',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumPosttracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('topics', models.TextField(blank=True, null=True)),
                ('last_read', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_posttracking',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('status', models.CharField(max_length=30)),
                ('site', models.CharField(max_length=200)),
                ('jabber', models.CharField(max_length=80)),
                ('icq', models.CharField(max_length=12)),
                ('msn', models.CharField(max_length=80)),
                ('aim', models.CharField(max_length=80)),
                ('yahoo', models.CharField(max_length=80)),
                ('location', models.CharField(max_length=30)),
                ('signature', models.TextField()),
                ('time_zone', models.FloatField()),
                ('language', models.CharField(max_length=5)),
                ('avatar', models.CharField(max_length=100)),
                ('theme', models.CharField(max_length=80)),
                ('show_avatar', models.IntegerField()),
                ('show_signatures', models.IntegerField()),
                ('privacy_permission', models.IntegerField()),
                ('markup', models.CharField(max_length=15)),
                ('post_count', models.IntegerField()),
                ('show_smilies', models.IntegerField()),
                ('signature_html', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_profile',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_by_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('zapped', models.IntegerField()),
                ('zapped_by_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('reason', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_report',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumReputation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user_id', models.IntegerField()),
                ('to_user_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('time', models.DateTimeField()),
                ('sign', models.IntegerField()),
                ('reason', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_reputation',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_id', models.IntegerField()),
                ('name', models.CharField(default='null', max_length=255)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
                ('views', models.IntegerField()),
                ('sticky', models.IntegerField()),
                ('closed', models.IntegerField()),
                ('post_count', models.IntegerField()),
                ('last_post_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_topic',
            },
        ),
        migrations.CreateModel(
            name='DjangobbForumTopicSubscribers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangobb_forum_topic_subscribers',
            },
        ),
        migrations.CreateModel(
            name='DjangoCommentFlags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('comment_id', models.IntegerField()),
                ('flag', models.CharField(max_length=30)),
                ('flag_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_comment_flags',
            },
        ),
        migrations.CreateModel(
            name='DjangoComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type_id', models.IntegerField()),
                ('object_pk', models.TextField()),
                ('site_id', models.IntegerField()),
                ('parent_comment', models.CharField(max_length=50)),
                ('path', models.IntegerField()),
                ('user_name', models.CharField(max_length=50)),
                ('user_email', models.CharField(max_length=75)),
                ('user_url', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('submit_date', models.DateTimeField()),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
                ('is_public', models.IntegerField()),
                ('is_removed', models.IntegerField()),
                ('user', models.ForeignKey(on_delete='CASCADE', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('parent_comment', 'path'),
                'managed': True,
                'db_table': 'django_comments',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=100)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': True,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoFlatpage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('enable_comments', models.IntegerField()),
                ('template_name', models.CharField(max_length=70)),
                ('registration_required', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_flatpage',
            },
        ),
        migrations.CreateModel(
            name='DjangoFlatpageSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flatpage_id', models.IntegerField()),
                ('site_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_flatpage_sites',
            },
        ),
        migrations.CreateModel(
            name='DjangoMessagesMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=120)),
                ('body', models.TextField()),
                ('sender_id', models.IntegerField()),
                ('recipient_id', models.IntegerField(blank=True, null=True)),
                ('parent_msg_id', models.IntegerField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
                ('sender_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('recipient_deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'django_messages_message',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(default='migration', max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoratingsScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type_id', models.IntegerField()),
                ('object_id', models.IntegerField()),
                ('key', models.CharField(max_length=32)),
                ('score', models.IntegerField()),
                ('votes', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangoratings_score',
            },
        ),
        migrations.CreateModel(
            name='DjangoratingsVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type_id', models.IntegerField()),
                ('object_id', models.IntegerField()),
                ('key', models.CharField(max_length=32)),
                ('score', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=15)),
                ('date_added', models.DateTimeField()),
                ('date_changed', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'djangoratings_vote',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='DjangoSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100)),
                ('name', models.CharField(default='null', max_length=50)),
            ],
            options={
                'managed': True,
                'db_table': 'django_site',
            },
        ),
        migrations.CreateModel(
            name='ForumForum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('slug', models.CharField(max_length=256)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('threads', models.IntegerField()),
                ('posts', models.IntegerField()),
                ('ordering', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'forum_forum',
            },
        ),
        migrations.CreateModel(
            name='ForumForumGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'forum_forum_groups',
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('body', models.TextField()),
                ('body_html', models.TextField()),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'forum_post',
            },
        ),
        migrations.CreateModel(
            name='ForumSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.IntegerField()),
                ('thread_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'forum_subscription',
            },
        ),
        migrations.CreateModel(
            name='ForumThread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_id', models.IntegerField()),
                ('title', models.CharField(max_length=512)),
                ('sticky', models.IntegerField()),
                ('closed', models.IntegerField()),
                ('posts', models.IntegerField()),
                ('views', models.IntegerField()),
                ('latest_post_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'forum_thread',
            },
        ),
        migrations.CreateModel(
            name='HitcountBlacklistIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'managed': True,
                'db_table': 'hitcount_blacklist_ip',
            },
        ),
        migrations.CreateModel(
            name='HitcountBlacklistUserAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'managed': True,
                'db_table': 'hitcount_blacklist_user_agent',
            },
        ),
        migrations.CreateModel(
            name='HitcountHit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('ip', models.CharField(max_length=40)),
                ('session', models.CharField(max_length=40)),
                ('user_agent', models.CharField(max_length=255)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('hitcount_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'hitcount_hit',
            },
        ),
        migrations.CreateModel(
            name='HitcountHitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hits', models.IntegerField()),
                ('modified', models.DateTimeField()),
                ('content_type_id', models.IntegerField()),
                ('object_pk', models.TextField()),
            ],
            options={
                'managed': True,
                'db_table': 'hitcount_hit_count',
            },
        ),
        migrations.CreateModel(
            name='JchatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.IntegerField()),
                ('type', models.CharField(max_length=1)),
                ('author_id', models.IntegerField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'jchat_message',
            },
        ),
        migrations.CreateModel(
            name='JchatRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'jchat_room',
            },
        ),
        migrations.CreateModel(
            name='LinksFriendlink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('site', models.CharField(max_length=256)),
                ('category_id', models.IntegerField()),
                ('description', models.TextField()),
                ('image_code', models.TextField(blank=True, null=True)),
                ('banner_page', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.CharField(max_length=128)),
                ('is_approved', models.IntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_approved', models.DateTimeField()),
                ('is_notified', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'links_friendlink',
            },
        ),
        migrations.CreateModel(
            name='LinksFriendlinkcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=256)),
            ],
            options={
                'managed': True,
                'db_table': 'links_friendlinkcategory',
            },
        ),
        migrations.CreateModel(
            name='MessagesMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=120)),
                ('body', models.TextField()),
                ('sender_id', models.IntegerField()),
                ('recipient_id', models.IntegerField(blank=True, null=True)),
                ('parent_msg_id', models.IntegerField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
                ('sender_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('recipient_deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'messages_message',
            },
        ),
        migrations.CreateModel(
            name='PhotosPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='static/files/userphotos/')),
                ('is_cover', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'photos_photo',
            },
        ),
        migrations.CreateModel(
            name='PhotosPhotoalbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='null', max_length=128)),
                ('slug', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('size', models.IntegerField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('object_pk', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete='PROTECT', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'db_table': 'photos_photoalbum',
            },
        ),
        migrations.CreateModel(
            name='RadioRadiojingle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=90, null=True)),
                ('file', models.CharField(max_length=2048)),
                ('enabled', models.IntegerField()),
                ('duration', models.TimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'radio_radiojingle',
            },
        ),
        migrations.CreateModel(
            name='RadioRadioplaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=90, null=True)),
                ('play_date', models.DateField(blank=True, null=True)),
                ('play_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('play_in_time', models.IntegerField()),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('randomize', models.IntegerField()),
                ('set_duration', models.IntegerField()),
                ('duration', models.TimeField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'radio_radioplaylist',
            },
        ),
        migrations.CreateModel(
            name='RadioRadioplaylistJingles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radioplaylist_id', models.IntegerField()),
                ('radiojingle_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'radio_radioplaylist_jingles',
            },
        ),
        migrations.CreateModel(
            name='RadioRadiosong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=90, null=True)),
                ('file', models.CharField(max_length=2048)),
                ('enabled', models.IntegerField()),
                ('duration', models.TimeField(blank=True, null=True)),
                ('playlist_id', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'radio_radiosong',
            },
        ),
        migrations.CreateModel(
            name='RegistrationRegistrationprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('activation_key', models.CharField(max_length=40)),
            ],
            options={
                'managed': True,
                'db_table': 'registration_registrationprofile',
            },
        ),
        migrations.CreateModel(
            name='SouthMigrationhistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=255)),
                ('migration', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'south_migrationhistory',
            },
        ),
        migrations.CreateModel(
            name='TastypieApiaccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('request_method', models.CharField(max_length=10)),
                ('accessed', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'tastypie_apiaccess',
            },
        ),
        migrations.CreateModel(
            name='TastypieApikey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('key', models.CharField(max_length=256)),
                ('created', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'tastypie_apikey',
            },
        ),
        migrations.CreateModel(
            name='VideosVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField()),
                ('embed_video', models.TextField()),
                ('video_album_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'videos_video',
            },
        ),
        migrations.CreateModel(
            name='VideosVideoalbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('name', models.CharField(default='null', max_length=128)),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField()),
                ('videos_count', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'videos_videoalbum',
            },
        ),
        migrations.CreateModel(
            name='VocalContestRealvocalcontestguest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('contest_id', models.IntegerField()),
                ('places', models.IntegerField()),
                ('is_payed', models.IntegerField()),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'vocal_contest_realvocalcontestguest',
            },
        ),
        migrations.CreateModel(
            name='VocalContestRealvocalcontestparticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('contest_id', models.IntegerField()),
                ('places', models.IntegerField()),
                ('is_payed', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('info', models.TextField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'vocal_contest_realvocalcontestparticipant',
            },
        ),
        migrations.CreateModel(
            name='VocalContestVocalcontest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('description', models.TextField()),
                ('rules_id', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('registration_end_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_real', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'vocal_contest_vocalcontest',
            },
        ),
        migrations.CreateModel(
            name='VocalContestVocalcontestcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('description', models.TextField()),
                ('contest_id', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'vocal_contest_vocalcontestcategory',
            },
        ),
        migrations.CreateModel(
            name='VocalContestVocalcontestparticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('contest_id', models.IntegerField()),
                ('title', models.CharField(max_length=120)),
                ('category_id', models.IntegerField()),
                ('file', models.CharField(max_length=2048)),
                ('description', models.TextField()),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'vocal_contest_vocalcontestparticipant',
            },
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('content_type_id', models.IntegerField()),
                ('object_id', models.IntegerField()),
                ('vote', models.SmallIntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'votes',
            },
        ),
        migrations.AlterUniqueTogether(
            name='votes',
            unique_together={('user_id', 'content_type_id', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='radioradioplaylistjingles',
            unique_together={('radioplaylist_id', 'radiojingle_id')},
        ),
        migrations.AddField(
            model_name='photosphoto',
            name='album',
            field=models.ForeignKey(on_delete='CASCADE', to='minus.PhotosPhotoalbum'),
        ),
        migrations.AlterUniqueTogether(
            name='jchatroom',
            unique_together={('content_type_id', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='forumsubscription',
            unique_together={('author_id', 'thread_id')},
        ),
        migrations.AlterUniqueTogether(
            name='forumforumgroups',
            unique_together={('forum_id', 'group_id')},
        ),
        migrations.AlterUniqueTogether(
            name='djangoratingsvote',
            unique_together={('content_type_id', 'object_id', 'key', 'user_id', 'ip_address')},
        ),
        migrations.AlterUniqueTogether(
            name='djangoratingsscore',
            unique_together={('content_type_id', 'object_id', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='djangoflatpagesites',
            unique_together={('flatpage_id', 'site_id')},
        ),
        migrations.AlterUniqueTogether(
            name='djangocontenttype',
            unique_together={('app_label', 'model')},
        ),
        migrations.AlterUniqueTogether(
            name='djangocommentflags',
            unique_together={('user_id', 'comment_id', 'flag')},
        ),
        migrations.AlterUniqueTogether(
            name='djangobbforumtopicsubscribers',
            unique_together={('topic_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='djangobbforumreputation',
            unique_together={('from_user_id', 'post_id')},
        ),
        migrations.AlterUniqueTogether(
            name='djangobbforumforummoderators',
            unique_together={('forum_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='djangobbforumcategorygroups',
            unique_together={('category_id', 'group_id')},
        ),
        migrations.AlterUniqueTogether(
            name='chunkschunk',
            unique_together={('key', 'lang_code', 'site_id')},
        ),
        migrations.AlterUniqueTogether(
            name='authpermission',
            unique_together={('content_type_id', 'codename')},
        ),
    ]
